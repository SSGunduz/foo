// automatically generated by Xtext
grammar org.eclipse.example.Ticketmodel.Language with org.eclipse.xtext.common.Terminals

import "http://org/eclipse/example/Ticket" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

TicketSystem returns TicketSystem:
	{TicketSystem}
	'TicketSystem'
	'{'
		('City' City=EString)?
		('persons' '{' persons+=Person ( "," persons+=Person)* '}' )?
	'}';

Person returns Person:
	Person_Impl | Youth | Child | Adult;

IntercityTicket returns IntercityTicket:
	IntercityTicket_Impl | SingleTicket | MultiJourney | MultiDayTicket;

CityTicket returns CityTicket:
	CityTicket_Impl | Urban_Impl | Standard | ExtraUrban_Impl | TwoWay | OneWay | WeeklyPass | Luggage | CumulativeTickets_Impl | StandardCumulative | CumulativeOneDay | Weekly | FairTicket;


EString returns ecore::EString:
	STRING | ID;

Person_Impl returns Person:
	{Person}
	'Person'
	'{'
		('Name' Name=EString)?
		('Age' Age=EInt)?
		('IntercityTickets' '{' IntercityTickets+=IntercityTicket ( "," IntercityTickets+=IntercityTicket)* '}' )?
		('CityTickets' '{' CityTickets+=CityTicket ( "," CityTickets+=CityTicket)* '}' )?
		('subscription' subscription=Subscription)?
	'}';

IntercityTicket_Impl returns IntercityTicket:
	{IntercityTicket}
	(Stamped?='Stamped')?
	'IntercityTicket'
	'{'
		('Usage' Usage=EString)?
		('Price' Price=EInt)?
		('CopyType' CopyType=CopyType)?
	'}';

CityTicket_Impl returns CityTicket:
	{CityTicket}
	'CityTicket'
	'{'
		('Price' Price=EInt)?
		('Validity' Validity=EString)?
		('Date' Date=EString)?
	'}';

EInt returns ecore::EInt:
	'-'? INT;

Subscription returns Subscription:
	{Subscription}
	'Subscription'
	'{'
		('DaysNumber' DaysNumber=EInt)?
		('Price' Price=EInt)?
		('ID' ID=EString)?
	'}';

Youth returns Youth:
	{Youth}
	'Youth'
	'{'
		('Name' Name=EString)?
		('Age' Age=EInt)?
		('IntercityTickets' '{' IntercityTickets+=IntercityTicket ( "," IntercityTickets+=IntercityTicket)* '}' )?
		('CityTickets' '{' CityTickets+=CityTicket ( "," CityTickets+=CityTicket)* '}' )?
		('subscription' subscription=Subscription)?
	'}';

Child returns Child:
	{Child}
	'Child'
	'{'
		('Name' Name=EString)?
		('Age' Age=EInt)?
		('IntercityTickets' '{' IntercityTickets+=IntercityTicket ( "," IntercityTickets+=IntercityTicket)* '}' )?
		('CityTickets' '{' CityTickets+=CityTicket ( "," CityTickets+=CityTicket)* '}' )?
		('subscription' subscription=Subscription)?
	'}';

Adult returns Adult:
	{Adult}
	'Adult'
	'{'
		('Name' Name=EString)?
		('Age' Age=EInt)?
		('IntercityTickets' '{' IntercityTickets+=IntercityTicket ( "," IntercityTickets+=IntercityTicket)* '}' )?
		('CityTickets' '{' CityTickets+=CityTicket ( "," CityTickets+=CityTicket)* '}' )?
		('subscription' subscription=Subscription)?
	'}';

EBoolean returns ecore::EBoolean:
	'true' | 'false';

enum CopyType returns CopyType:
				Digital = 'Digital' | Paper = 'Paper' | Electronic = 'Electronic';

SingleTicket returns SingleTicket:
	{SingleTicket}
	(Stamped?='Stamped')?
	'SingleTicket'
	'{'
		('Usage' Usage=EString)?
		('Price' Price=EInt)?
		('CopyType' CopyType=CopyType)?
	'}';

MultiJourney returns MultiJourney:
	{MultiJourney}
	(Stamped?='Stamped')?
	'MultiJourney'
	'{'
		('Usage' Usage=EString)?
		('Price' Price=EInt)?
		('CopyType' CopyType=CopyType)?
		('NumberOfJourney' NumberOfJourney=EInt)?
	'}';

MultiDayTicket returns MultiDayTicket:
	{MultiDayTicket}
	(Stamped?='Stamped')?
	'MultiDayTicket'
	'{'
		('Usage' Usage=EString)?
		('Price' Price=EInt)?
		('CopyType' CopyType=CopyType)?
		('NumberOfDays' NumberOfDays=EString)?
	'}';

Urban_Impl returns Urban:
	{Urban}
	'Urban'
	'{'
		('Price' Price=EInt)?
		('Validity' Validity=EString)?
		('Date' Date=EString)?
	'}';

Standard returns Standard:
	{Standard}
	'Standard'
	'{'
		('Price' Price=EInt)?
		('Validity' Validity=EString)?
		('Date' Date=EString)?
		('Zone' Zone=EInt)?
	'}';

ExtraUrban_Impl returns ExtraUrban:
	{ExtraUrban}
	'ExtraUrban'
	'{'
		('Price' Price=EInt)?
		('Validity' Validity=EString)?
		('Date' Date=EString)?
		('Zone' Zone=EInt)?
	'}';

TwoWay returns TwoWay:
	{TwoWay}
	'TwoWay'
	'{'
		('Price' Price=EInt)?
		('Validity' Validity=EString)?
		('Date' Date=EString)?
	'}';

OneWay returns OneWay:
	{OneWay}
	'OneWay'
	'{'
		('Price' Price=EInt)?
		('Validity' Validity=EString)?
		('Date' Date=EString)?
	'}';

WeeklyPass returns WeeklyPass:
	{WeeklyPass}
	'WeeklyPass'
	'{'
		('Price' Price=EInt)?
		('Validity' Validity=EString)?
		('Date' Date=EString)?
		('Zone' Zone=EInt)?
	'}';

Luggage returns Luggage:
	{Luggage}
	'Luggage'
	'{'
		('Price' Price=EInt)?
		('Validity' Validity=EString)?
		('Date' Date=EString)?
		('Zone' Zone=EInt)?
	'}';

CumulativeTickets_Impl returns CumulativeTickets:
	{CumulativeTickets}
	'CumulativeTickets'
	'{'
		('Price' Price=EInt)?
		('Validity' Validity=EString)?
		('Date' Date=EString)?
	'}';

StandardCumulative returns StandardCumulative:
	{StandardCumulative}
	'StandardCumulative'
	'{'
		('Price' Price=EInt)?
		('Validity' Validity=EString)?
		('Date' Date=EString)?
	'}';

CumulativeOneDay returns CumulativeOneDay:
	{CumulativeOneDay}
	'CumulativeOneDay'
	'{'
		('Price' Price=EInt)?
		('Validity' Validity=EString)?
		('Date' Date=EString)?
		('Area' Area=Area)?
	'}';

Weekly returns Weekly:
	{Weekly}
	'Weekly'
	'{'
		('Price' Price=EInt)?
		('Validity' Validity=EString)?
		('Date' Date=EString)?
	'}';

FairTicket returns FairTicket:
	{FairTicket}
	'FairTicket'
	'{'
		('Price' Price=EInt)?
		('Validity' Validity=EString)?
		('Date' Date=EString)?
		('FieraTicket' FieraTicket=FieraTicket)?
	'}';

enum Area returns Area:
				Large = 'Large' | Medium = 'Medium' | Small = 'Small';

enum FieraTicket returns FieraTicket:
				Single = 'Single' | Return = 'Return' | DayPass = 'DayPass';
